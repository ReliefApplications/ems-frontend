@use '~@angular/material' as mat;
@import 'variables.scss';
@include mat.core();

.sv_main {
  --primary-color: #{$primary_500};
  --secondary-color: #{$primary_500};
  // --primary-text-color: #676a6c;
  // --secondary-text-color: #a7a7a7;
  // --inverted-text-color: #ffffff;
  --primary-hover-color: #{$primary_500};
  --selection-border-color: #{$primary_500};
  // --primary-icon-color: #3d4d5d;
  // --primary-bg-color: #fff;
  // --secondary-bg-color: #f4f4f4;
  // --primary-border-color: #e7eaec;
  // --secondary-border-color: #ddd;
  // --error-color: #ed5565;
}

$safe-palette: (
  50: $primary_50,
  100: $primary_100,
  200: $primary_200,
  300: $primary_300,
  400: $primary_400,
  500: $primary_500,
  600: $primary_600,
  700: $primary_700,
  800: $primary_800,
  900: $primary_900,
  A100: $primary_A100,
  A200: $primary_A200,
  A400: $primary_A400,
  A700: $primary_A700,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #ffffff,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #ffffff,
    A700: #ffffff,
  ),
);

$safe-palette-accent: (
  main: $secondary_main,
  lighter: $secondary_lighter,
  darker: $secondary_darker,
  200: $secondary_200,
  // For slide toggle,
  contrast:
    (
      main: white,
      lighter: rgba(black, 0.87),
      darker: white,
    ),
);

$safe-palette-warn: (
  main: #d34444,
  // 500
  lighter: #ff766f,
  darker: #9b001d,
  200: #e9a2a2,
  // 200
  // For slide toggle,
  contrast:
    (
      main: white,
      lighter: rgba(black, 0.87),
      darker: white,
    ),
);

$safe-primary: mat.define-palette($safe-palette);
$safe-accent: mat.define-palette($safe-palette-accent, main, lighter, darker);
$safe-warn: mat.define-palette($safe-palette-warn, main, lighter, darker);
$safe-theme: mat.define-light-theme($safe-primary, $safe-accent, $safe-warn);

// === CUSTOM THEME ===
@mixin custom-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  .snack-error {
    background-color: mat.get-color-from-palette($warn);
    color: white;

    .mat-simple-snackbar-action {
      color: white;
    }
  }

  .active-link {
    .nav-icon {
      color: mat.get-color-from-palette($primary);
    }
  }

  .mat-list-item {
    a:not(.active-link) {
      color: mat.get-color-from-palette(mat.$grey-palette, 500);
    }
  }

  .primary {
    color: mat.get-color-from-palette($primary);
  }

  .accent {
    color: mat.get-color-from-palette($accent);
  }

  .warn {
    color: mat.get-color-from-palette($warn);
  }

  .safe-add-application {
    background-color: mat.get-color-from-palette($primary, 50);

    span {
      color: mat.get-color-from-palette($primary);
    }
  }

  .safe-add-step {
    background-color: mat.get-color-from-palette($primary, 50);

    span {
      color: mat.get-color-from-palette($primary);
    }
  }
}

@mixin chip($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  .warn-chip {
    background-color: mat.get-color-from-palette($warn, lighter) !important;
    color: mat.get-color-from-palette($warn) !important;
  }

  .success-chip {
    background-color: #e9fae1 !important;
    color: #67dd2d !important;
  }

  .accent-chip {
    background-color: rgba(255, 159, 0, 0.14) !important;
    color: #ff9f00 !important;
  }

  .primary-chip {
    background-color: mat.get-color-from-palette($primary, lighter) !important;
    color: mat.get-color-from-palette($primary) !important;
  }
}

@mixin button($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  .mat-stroked-button:not(.mat-button-disabled) {
    &.mat-primary {
      border-color: mat.get-color-from-palette($primary);
    }
    &.mat-accent {
      border-color: mat.get-color-from-palette($accent);
    }
    &.mat-warn {
      border-color: mat.get-color-from-palette($warn);
    }
  }

  .mat-button:disabled,
  .mat-stroked-button:disabled {
    color: #adadad !important;
  }

  .mat-flat-button:disabled {
    color: #adadad !important;
    background-color: #d8d8d8 !important;
  }
}

// img-choice
// img-selected

// === GLOBAL STYLES ==
.mat-table {
  box-shadow: 0 2px 5px 0 rgba(219, 134, 134, 0.2);
  font-size: 14px;
  opacity: 0.87;
  border-radius: 4px;
  width: 100%;
}

.success-button {
  &:not(:disabled) {
    background-color: #63d168 !important;
    color: white !important;
  }
}

.danger-button {
  background: mat.get-color-from-palette($safe-warn) !important;
}

.mat-header-cell {
  border-bottom: 1px solid #d8d8d8 !important;
  color: #767373;
}

.mat-row {
  .mat-cell {
    border-bottom: 1px solid #f2f3f5 !important;
    color: #3f3c3c;
  }
  .mat-cell:first-child {
    color: #000000;
    font-weight: 500;
  }
}

.mat-spinner {
  margin: auto;
}

.action-button {
  position: fixed !important;
  bottom: 32px;
  right: 32px;
  z-index: 2000;
}

*:focus,
*:active:focus,
*.active:focus {
  outline: none !important;
  outline-style: none !important;
}

.page-header {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  margin-bottom: 20px;

  .page-title {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    margin: 0;
  }
}

.clickable {
  &:hover {
    cursor: pointer;
  }
}

.mat-column-_actions,
.mat-column-actions {
  width: 64px;
}

.mat-chip {
  border-radius: 0px !important;
  min-width: 75px;
  max-width: 1px; //This works??
  justify-content: center;
  font-weight: 500 !important;

  &.mat-chip-disabled {
    opacity: 1 !important;
    pointer-events: none;
  }
}

// === FORMS ===
.auth-form {
  padding: 32px 24px;
  border: 1px solid darkgray;
  border-radius: 4px;
  margin: 32px;
}

.form-group {
  &:not(td) {
    display: flex;
    flex-direction: column;

    &:not(:first-child) {
      margin-top: 32px;
    }

    .form-group-row {
      display: flex;
      gap: 8px;
    }

    .form-group-title {
      font-weight: bold;
      font-size: 16px;
      margin-bottom: 12px;
      border-bottom: 1px solid darkgray;
      padding-bottom: 4px;
    }
    .nested-form-group {
      padding: 16px;
      border: 1px solid darkgray;
      border-radius: 4px;

      .form-group:last-child {
        margin-bottom: 0;
      }
    }
    .form-radio-group {
      display: flex;
      flex-direction: column;
      margin-bottom: 1.25em;
      gap: 4px;
    }
    .form-slide-toggle {
      margin-bottom: 1.25em;
    }
  }
}

.mat-tab-group {
  .mat-tab-header {
    margin-bottom: 12px;
  }
}

.collapsible-form-group {
  mat-expansion-panel {
    border: solid 1px rgba(0, 0, 0, 0.1);
    box-shadow: none !important;

    .form-group {
      gap: 8px;
    }
  }

  mat-expansion-panel:not(.mat-expanded)
    + mat-expansion-panel:not(.mat-expanded) {
    border-top: 0;
  }
}

@include mat.all-component-themes($safe-theme);
@include chip($safe-theme);
@include button($safe-theme);
@include custom-theme($safe-theme);

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  overflow: hidden;
}

.widget-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;

  .widget-last-update {
    visibility: hidden;
    position: absolute;
    bottom: 0;
    font-size: 11px;
    padding: 0 4px;
    z-index: 1000;
    margin: 0;
    color: #a9a9a9;
  }

  &:hover {
    .widget-last-update {
      visibility: visible;
    }
  }
}

.widget-header {
  box-sizing: border-box;
  height: 40px;
  position: relative;
  z-index: 1001;
  background-color: white;
  color: black;
  text-align: left;
  line-height: 40px;
  padding: 0 40px !important;
  border-bottom: 1px solid #d8d8d8 !important;
  display: flex;
  flex-direction: row;
  justify-content: space-between;

  .widget-title {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    flex: 1;
    margin: unset;
  }
}

.widget-content {
  flex: 1;
  height: auto;
}

// === DIALOGS ===
.add-dialog {
  mat-dialog-container {
    width: 700px;
  }
}

.no-padding-dialog {
  mat-dialog-container {
    padding: unset;
  }
}

.status-dialog {
  mat-dialog-container {
    box-shadow: none;
    background: none;
  }
}

.tile-settings-dialog,
.expanded-widget-dialog {
  max-width: unset !important;
  width: 100%;
  height: calc(100% - 72px);

  mat-dialog-container {
    position: relative;
    border-radius: 4px 4px 0 0;
    width: 100%;
  }

  .mat-dialog-content {
    max-height: calc(100% - 68px - 32px);
    height: 100%;
  }
}

.expanded-widget-dialog {
  .mat-dialog-content {
    max-height: unset;
    height: 100%;
  }
}

// === UTILS ===
.info-icon {
  color: #939393;
  font-size: 22px;
  cursor: pointer;
}

.info-text {
  color: #939393;
  margin-bottom: 32px;
}

.info-row {
  display: flex;
  .info-icon {
    margin-left: 12px;
  }
}

// === SURVEY BUILDER ===
.core-question {
  color: mat.get-color-from-palette($safe-warn) !important;
}

@import 'theme.scss';

// === TINYMCE ===
.tox-editor-header *, .tox-tinymce-aux * {
  font-family: Roboto, "Helvetica Neue", sans-serif !important;
}
