# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- dev

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npx kendo-ui-license activate
  displayName: 'Activate Kendo UI License'
  env:
    KENDO_UI_LICENSE: $(KENDO_UI_LICENSE)

- script: |
    npx nx run front-office:build:azure-dev
    npx nx run back-office:build:azure-dev
    npx nx run web-widgets:build:azure-dev
    node .scripts/build-widgets.js
  displayName: 'build the apps'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/apps/front-office'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/dev/front-office/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/apps/back-office'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/dev/back-office/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/widgets'
    Contents: 'app-builder.js' # Only copy a single file
    TargetFolder: '$(Build.ArtifactStagingDirectory)/temp/web-widgets'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/dist/apps/front-office/tinymce'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/temp/web-widgets/tinymce'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/dist/apps/front-office/assets/i18n'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/temp/web-widgets/i18n'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/temp/web-widgets'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/dev/web-widgets/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/dev/front-office/$(Build.BuildId).zip'
    ArtifactName: 'dev-front-office'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/dev/back-office/$(Build.BuildId).zip'
    ArtifactName: 'dev-back-office'
    publishLocation: 'Container'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/temp/web-widgets'
    ArtifactName: 'dev-web-widgets'
    publishLocation: 'Container'