name: Release

on:
  push:
    branches:
      - main
      - next
      - next-major
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check branch
        run: |
          VALID_BRANCHES=("main" "next" "next-major" "beta" "alpha")
          BRANCH_NAME=$(basename ${{ github.ref }})

          if [[ ! " ${VALID_BRANCHES[@]} " =~ " ${BRANCH_NAME} " ]]; then
            echo "Invalid branch name: $BRANCH_NAME"
            echo "Valid branch names are: ${VALID_BRANCHES[@]}"
            exit 1
          fi
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get package version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Install Dependencies
        run: npm i
      - name: Build Back-office - ${{ steps.get_version.outputs.version }}
        run: npx nx run back-office:build:${{ secrets.CONFIG }}
      - name: Build Front-office - ${{ steps.get_version.outputs.version }}
        run: npx nx run front-office:build:${{ secrets.CONFIG }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        run: npx semantic-release