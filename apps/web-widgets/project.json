{
  "name": "web-widgets",
  "$schema": "../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/web-widgets/src",
  "prefix": "app",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/web-widgets",
        "index": "apps/web-widgets/src/index.html",
        "main": "apps/web-widgets/src/main.ts",
        "polyfills": ["apps/web-widgets/src/polyfills.ts"],
        "tsConfig": "apps/web-widgets/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "styles": ["apps/web-widgets/src/styles.scss"],
        "scripts": [
          "node_modules/tinymce/tinymce.min.js",
          "node_modules/tinymce/themes/silver/theme.min.js"
        ],
        "allowedCommonJsDependencies": [
          "minimatch",
          "hammerjs",
          "subscriptions-transport-ws",
          "zen-observable",
          "lodash",
          "cronstrue",
          "cron-parser",
          "cron-validator",
          "localforage",
          "survey-core",
          "survey-creator-core",
          "survey-angular-ui",
          "fast-sha256",
          "color",
          "esri-leaflet-vector",
          "leaflet",
          "leaflet.markercluster",
          "jsonpath",
          "to-json-schema",
          "email-validator"
        ]
      },
      "configurations": {
        "azure-dev": {
          "fileReplacements": [
            {
              "replace": "apps/web-widgets/src/environments/environment.ts",
              "with": "apps/web-widgets/src/environments/environment.azure.dev.ts"
            }
          ],
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "12mb",
              "maximumError": "20mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "1mb",
              "maximumError": "2mb"
            }
          ],
          "outputHashing": "none",
          "stylePreprocessorOptions": {
            "includePaths": [
              "libs/styles/src/lib/themes/default",
              "apps/web-widgets/src/app/styles"
            ]
          }
        },
        "azure-uat": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "12mb",
              "maximumError": "20mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "1mb",
              "maximumError": "2mb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "apps/web-widgets/src/environments/environment.ts",
              "with": "apps/web-widgets/src/environments/environment.azure.uat.ts"
            }
          ],
          "outputHashing": "none",
          "stylePreprocessorOptions": {
            "includePaths": [
              "libs/styles/src/lib/themes/default",
              "apps/web-widgets/src/app/styles"
            ]
          }
        },
        "azure-prod": {
          "fileReplacements": [
            {
              "replace": "apps/web-widgets/src/environments/environment.ts",
              "with": "apps/web-widgets/src/environments/environment.azure.prod.ts"
            }
          ],
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "12mb",
              "maximumError": "20mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "1mb",
              "maximumError": "2mb"
            }
          ],
          "outputHashing": "none",
          "stylePreprocessorOptions": {
            "includePaths": [
              "libs/styles/src/lib/themes/default",
              "apps/web-widgets/src/app/styles"
            ]
          }
        },
        "azure-local": {
          "fileReplacements": [
            {
              "replace": "apps/web-widgets/src/environments/environment.ts",
              "with": "apps/web-widgets/src/environments/environment.azure.local.ts"
            }
          ],
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "12mb",
              "maximumError": "20mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "1mb",
              "maximumError": "2mb"
            }
          ],
          "outputHashing": "none",
          "stylePreprocessorOptions": {
            "includePaths": [
              "libs/styles/src/lib/themes/default",
              "apps/web-widgets/src/app/styles"
            ]
          }
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true,
          "stylePreprocessorOptions": {
            "includePaths": [
              "libs/styles/src/lib/themes/default",
              "apps/web-widgets/src/app/styles"
            ]
          }
        }
      },
      "defaultConfiguration": "azure-dev"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "development": {
          "browserTarget": "web-widgets:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "web-widgets:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": [
          "apps/web-widgets/**/*.ts",
          "apps/web-widgets/**/*.html"
        ]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/web-widgets/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "bundle": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["node .scripts/build-widgets.js"]
      }
    }
  },
  "tags": []
}
